group 'com.nishtahir'
version '1.0-SNAPSHOT'

buildscript {
    repositories {
        mavenCentral()
        maven {
            url  "https://dl.bintray.com/jetbrains/kotlin-native-dependencies"
        }
    }

    dependencies {
        classpath "org.jetbrains.kotlin:kotlin-native-gradle-plugin:0.1"
    }
}

apply plugin: 'konan'

konanInterop {
    wiringPi {
        defFile 'wiringPi.def'
        includeDirs 'src/include/'
        linkerOpts '-lwiringPi -Lsrc/include/'
        target 'raspberrypi'
    }
}

konanArtifacts {
    ktpi {
        inputFiles fileTree('src/main/')
        useInterop 'wiringPi'
        target 'raspberrypi'
    }
}

void dumpCompilatioTask(Task task) {
    println()
    println("Compilation task: ${task.name}")
    println("outputDir          : ${task.outputDir}")
    println("artifactPath       : ${task.artifactPath}")
    println("inputFiles         : ${task.inputFiles.files}")
    println("libraries          : ${task.libraries}")
    println("nativeLibraries    : ${task.nativeLibraries}")
    println("linkerOpts         : ${task.linkerOpts}")
    println("noStdLib           : ${task.noStdLib}")
    println("noLink             : ${task.noLink}")
    println("noMain             : ${task.noMain}")
    println("enableOptimization : ${task.enableOptimization}")
    println("enableAssertions   : ${task.enableAssertions}")
    println("target             : ${task.target}")
    println("languageVersion    : ${task.languageVersion}")
    println("apiVersion         : ${task.apiVersion}")
}

void dumpInteropTask(Task task) {
    println()
    println("Stub generation task: ${task.name}")
    println("stubsDir           : ${task.stubsDir}")
    println("libsDir            : ${task.libsDir}")
    println("defFile            : ${task.defFile}")
    println("target             : ${task.target}")
    println("pkg                : ${task.pkg}")
    println("linker             : ${task.linker}")
    println("compilerOpts       : ${task.compilerOpts}")
    println("linkerOpts         : ${task.linkerOpts}")
    println("headers            : ${task.headers.files}")
    println("linkFiles          : ${task.linkFiles}")
}

task dumpParameters {
    doLast {
        dumpCompilatioTask(konanArtifacts['ktpi'].compilationTask)
        dumpInteropTask(konanInterop['wiringPi'].generateStubsTask)
        dumpCompilatioTask(konanInterop['wiringPi'].compileStubsTask)
    }
}

